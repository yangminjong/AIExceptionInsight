plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
	id 'jacoco'
	id 'application'
}

group = 'com.github.yangminjong'
version = '0.0.1-SNAPSHOT'

task runTestApp(type: JavaExec) {
	group = 'application'
	description = 'AI 예외 분석 테스트 애플리케이션 실행'
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.github.yangminjong.aiexceptioninsight.demo.TestAppKt'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation("org.springframework.boot:spring-boot-starter")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
	
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/AiExceptionInsightApplication*'])
		}))
	}
}

test.finalizedBy jacocoTestReport

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.6
			}
		}
	}
}

bootJar {
	enabled = false
}

jar {
	enabled = true
	archiveClassifier = ''
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			
			groupId = 'com.github.yangminjong'
			artifactId = 'ai-exception-insight'
			version = project.version
			
			pom {
				name = 'AIExceptionInsight'
				description = 'AI 기반 예외 분석 라이브러리'
				url = 'https://github.com/yangminjong/AIExceptionInsight'
				
				licenses {
					license {
						name = 'MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				
				developers {
					developer {
						id = 'yangminjong'
						name = 'Yang Minjong'
						email = 'example@example.com'
					}
				}
			}
		}
	}
}
